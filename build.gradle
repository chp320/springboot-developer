plugins {
    id 'java'
    id 'org.springframework.boot' version '3.1.5'
//    id 'org.springframework.boot' version '3.0.2'
    id 'io.spring.dependency-management' version '1.1.3'
}

group = 'com.skyfox83'
version = '0.0.1-SNAPSHOT'

java {
    sourceCompatibility = '17'
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'

    // 스프링 데이터 JPA 관련 추가
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    runtimeOnly 'com.h2database:h2'
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'
    testAnnotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.projectlombok:lombok'

    // 타임리프 사용을 위한 의존성 추가
    implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
    
    // 스프링 시큐리티 사용을 위한 의존성 추가
    implementation 'org.springframework.boot:spring-boot-starter-security'
    // 타임리프에서 스프링 시큐리티 사용을 위한 의존성 추가
    implementation 'org.thymeleaf.extras:thymeleaf-extras-springsecurity6'
    // 스프링 시큐리티 테스트를 위한 의존성 추가
    testImplementation 'org.springframework.security:spring-security-test'

    // JWT 사용을 위한 의존성 추가
    implementation 'io.jsonwebtoken:jjwt:0.9.1'     // 자바 jwt 라이브러리
    implementation 'javax.xml.bind:jaxb-api:2.3.1'  // xml 문서와 java 객체간 맵핑을 자동화
    annotationProcessor "org.springframework.boot:spring-boot-configuration-processor"  // @ConfigurationProperties 사용 위함
}

tasks.named('bootBuildImage') {
    builder = 'paketobuildpacks/builder-jammy-base:latest'
}

tasks.named('test') {
    useJUnitPlatform()
}
